{"dependencies":[{"name":"./env","loc":{"line":1,"column":19}},{"name":"./config","loc":{"line":2,"column":21}},{"name":"./render/client","loc":{"line":3,"column":39}},{"name":"./directive/base","loc":{"line":8,"column":12}},{"name":"./directive/animation","loc":{"line":9,"column":12}},{"name":"./module/timeout","loc":{"line":10,"column":12}},{"name":"./dom","loc":{"line":11,"column":26}},{"name":"./util","loc":{"line":14,"column":23}},{"name":"./helper/cursor","loc":{"line":26,"column":24}}],"generated":{"js":"var env =  require(\"./env\");\nvar config = require(\"./config\"); \nvar Regular = module.exports = require(\"./render/client\");\nvar Parser = Regular.Parser;\nvar Lexer = Regular.Lexer;\n\n// if(env.browser){\n    require(\"./directive/base\");\n    require(\"./directive/animation\");\n    require(\"./module/timeout\");\n    Regular.dom = require(\"./dom\");\n// }\nRegular.env = env;\nRegular.util = require(\"./util\");\nRegular.parse = function(str, options){\n  options = options || {};\n\n  if(options.BEGIN || options.END){\n    if(options.BEGIN) config.BEGIN = options.BEGIN;\n    if(options.END) config.END = options.END;\n    Lexer.setup();\n  }\n  var ast = new Parser(str).parse();\n  return !options.stringify? ast : JSON.stringify(ast);\n}\nRegular.Cursor =require('./helper/cursor') \n\nRegular.isServer = env.node;\nRegular.isRegular = function( Comp ){\n  return  Comp.prototype instanceof Regular;\n}\n\n\n"},"hash":"286444d93ec17bf34e88a4bf85127a6f"}