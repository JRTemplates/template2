{"dependencies":[],"generated":{"js":"\nvar f = module.exports = {};\n\n// json:  two way \n//  - get: JSON.stringify\n//  - set: JSON.parse\n//  - example: `{ title|json }`\nf.json = {\n  get: function( value ){\n    return typeof JSON !== 'undefined'? JSON.stringify(value): value;\n  },\n  set: function( value ){\n    return typeof JSON !== 'undefined'? JSON.parse(value) : value;\n  }\n}\n\n// last: one-way\n//  - get: return the last item in list\n//  - example: `{ list|last }`\nf.last = function(arr){\n  return arr && arr[arr.length - 1];\n}\n\n// average: one-way\n//  - get: copute the average of the list\n//  - example: `{ list| average: \"score\" }`\nf.average = function(array, key){\n  array = array || [];\n  return array.length? f.total(array, key)/ array.length : 0;\n}\n\n\n// total: one-way\n//  - get: copute the total of the list\n//  - example: `{ list| total: \"score\" }`\nf.total = function(array, key){\n  var total = 0;\n  if(!array) return;\n  array.forEach(function( item ){\n    total += key? item[key] : item;\n  })\n  return total;\n}\n\n// var basicSortFn = function(a, b){return b - a}\n\n// f.sort = function(array, key, reverse){\n//   var type = typeof key, sortFn; \n//   switch(type){\n//     case 'function': sortFn = key; break;\n//     case 'string': sortFn = function(a, b){};break;\n//     default:\n//       sortFn = basicSortFn;\n//   }\n//   // need other refernce.\n//   return array.slice().sort(function(a,b){\n//     return reverse? -sortFn(a, b): sortFn(a, b);\n//   })\n//   return array\n// }\n\n\n"},"hash":"2f824c4ae013ecb63733d346f77b9255"}